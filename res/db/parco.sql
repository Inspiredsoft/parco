SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

DROP SCHEMA IF EXISTS `parco` ;
CREATE SCHEMA IF NOT EXISTS `parco` DEFAULT CHARACTER SET utf8 ;
USE `parco` ;

-- -----------------------------------------------------
-- Table `parco`.`USERS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`USERS` ;

CREATE TABLE IF NOT EXISTS `parco`.`USERS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `USERNAME` VARCHAR(100) NOT NULL,
  `PASSWORD` VARCHAR(100) NOT NULL,
  `NAME` VARCHAR(50) NOT NULL,
  `SURNAME` VARCHAR(50) NOT NULL,
  `EMAIL` VARCHAR(200) NULL,
  `PHONE` VARCHAR(20) NULL,
  `ACTIVE` BIT NOT NULL,
  `LAST_ACCESS` DATETIME NULL,
  `REMOVED` BIT NOT NULL,
  `REMOVAL_DATE` DATETIME NULL,
  `VERSION` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`IMPORT_INFO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`IMPORT_INFO` ;

CREATE TABLE IF NOT EXISTS `parco`.`IMPORT_INFO` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TIPO` INT(11) NOT NULL,
  `FILE` VARCHAR(200) NOT NULL,
  `DATA` DATETIME NOT NULL,
  `ID_UTENTE` INT NOT NULL,
  `DATA_INIZIO` DATETIME NULL,
  `DATA_FINE` DATETIME NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_IMPORT_USERS1`
    FOREIGN KEY (`ID_UTENTE`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_IMPORT_USERS1_idx` ON `parco`.`IMPORT_INFO` (`ID_UTENTE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`JOB`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`JOB` ;

CREATE TABLE IF NOT EXISTS `parco`.`JOB` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ADD_DATE` DATETIME NOT NULL,
  `START_DATE` DATETIME NULL,
  `END_DATE` DATETIME NULL,
  `EXE_TIME` INT NULL,
  `JAVA_CLASS` VARCHAR(200) NOT NULL,
  `EXCEPTION` TEXT NULL,
  `STATUS` CHAR(1) NOT NULL,
  `TRIES` INT NOT NULL DEFAULT 0,
  `ID_USER` INT NOT NULL,
  `ID_PARENT` INT NULL,
  `ID_IMPORT` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_JOB_USERS1`
    FOREIGN KEY (`ID_USER`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_JOB_JOB1`
    FOREIGN KEY (`ID_PARENT`)
    REFERENCES `parco`.`JOB` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_JOB_IMPORT_INFO1`
    FOREIGN KEY (`ID_IMPORT`)
    REFERENCES `parco`.`IMPORT_INFO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_JOB_USERS1_idx` ON `parco`.`JOB` (`ID_USER` ASC);

CREATE INDEX `fk_JOB_JOB1_idx` ON `parco`.`JOB` (`ID_PARENT` ASC);

CREATE INDEX `fk_JOB_IMPORT_INFO1_idx` ON `parco`.`JOB` (`ID_IMPORT` ASC);


-- -----------------------------------------------------
-- Table `parco`.`JOB_PARAMETER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`JOB_PARAMETER` ;

CREATE TABLE IF NOT EXISTS `parco`.`JOB_PARAMETER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_JOB` INT NOT NULL,
  `NAME` VARCHAR(200) NOT NULL,
  `VALUE` VARCHAR(200) NOT NULL,
  `LABEL` VARCHAR(200) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_JOB_PARAMETER_JOB`
    FOREIGN KEY (`ID_JOB`)
    REFERENCES `parco`.`JOB` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_JOB_PARAMETER_JOB_idx` ON `parco`.`JOB_PARAMETER` (`ID_JOB` ASC);


-- -----------------------------------------------------
-- Table `parco`.`JOB_MESSAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`JOB_MESSAGE` ;

CREATE TABLE IF NOT EXISTS `parco`.`JOB_MESSAGE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_JOB` INT NOT NULL,
  `MESSAGE` VARCHAR(2000) NOT NULL,
  `DATE` DATETIME NOT NULL,
  `LEVEL` CHAR(1) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_JOB_MESSAGE_JOB1`
    FOREIGN KEY (`ID_JOB`)
    REFERENCES `parco`.`JOB` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_JOB_MESSAGE_JOB1_idx` ON `parco`.`JOB_MESSAGE` (`ID_JOB` ASC);


-- -----------------------------------------------------
-- Table `parco`.`GROUPS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`GROUPS` ;

CREATE TABLE IF NOT EXISTS `parco`.`GROUPS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(50) NOT NULL,
  `DESCRIPTION` VARCHAR(1000) NULL,
  `VERSION` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`USERS_GROUPS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`USERS_GROUPS` ;

CREATE TABLE IF NOT EXISTS `parco`.`USERS_GROUPS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_USERS` INT NOT NULL,
  `ID_GROUPS` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_USERS_GROUPS_USERS1`
    FOREIGN KEY (`ID_USERS`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_USERS_GROUPS_GROUPS1`
    FOREIGN KEY (`ID_GROUPS`)
    REFERENCES `parco`.`GROUPS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_USERS_GROUPS_USERS1_idx` ON `parco`.`USERS_GROUPS` (`ID_USERS` ASC);

CREATE INDEX `fk_USERS_GROUPS_GROUPS1_idx` ON `parco`.`USERS_GROUPS` (`ID_GROUPS` ASC);


-- -----------------------------------------------------
-- Table `parco`.`EVENTS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`EVENTS` ;

CREATE TABLE IF NOT EXISTS `parco`.`EVENTS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(100) NOT NULL,
  `VERSION` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`PERMISSIONS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`PERMISSIONS` ;

CREATE TABLE IF NOT EXISTS `parco`.`PERMISSIONS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(100) NOT NULL,
  `VERSION` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`GROUP_PERMISSION`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`GROUP_PERMISSION` ;

CREATE TABLE IF NOT EXISTS `parco`.`GROUP_PERMISSION` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_GROUPS` INT NOT NULL,
  `ID_PERMISSIONS` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_GROUP_EVENT_GROUPS1`
    FOREIGN KEY (`ID_GROUPS`)
    REFERENCES `parco`.`GROUPS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GROUP_EVENT_PERMISSIONS1`
    FOREIGN KEY (`ID_PERMISSIONS`)
    REFERENCES `parco`.`PERMISSIONS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_GROUP_EVENT_GROUPS1_idx` ON `parco`.`GROUP_PERMISSION` (`ID_GROUPS` ASC);

CREATE INDEX `fk_GROUP_EVENT_PERMISSIONS1_idx` ON `parco`.`GROUP_PERMISSION` (`ID_PERMISSIONS` ASC);


-- -----------------------------------------------------
-- Table `parco`.`GROUP_EVENT`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`GROUP_EVENT` ;

CREATE TABLE IF NOT EXISTS `parco`.`GROUP_EVENT` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_GROUPS` INT NOT NULL,
  `ID_EVENTS` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_GROUP_EVENT_GROUPS10`
    FOREIGN KEY (`ID_GROUPS`)
    REFERENCES `parco`.`GROUPS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GROUP_EVENT_EVENTS1`
    FOREIGN KEY (`ID_EVENTS`)
    REFERENCES `parco`.`EVENTS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_GROUP_EVENT_GROUPS1_idx` ON `parco`.`GROUP_EVENT` (`ID_GROUPS` ASC);

CREATE INDEX `fk_GROUP_EVENT_EVENTS1_idx` ON `parco`.`GROUP_EVENT` (`ID_EVENTS` ASC);


-- -----------------------------------------------------
-- Table `parco`.`MAIL`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`MAIL` ;

CREATE TABLE IF NOT EXISTS `parco`.`MAIL` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ADD_DATE` DATETIME NOT NULL,
  `START_DATE` DATETIME NULL,
  `END_DATE` DATETIME NULL,
  `EXE_TIME` INT NULL,
  `JAVA_CLASS` VARCHAR(200) NOT NULL,
  `EXCEPTION` TEXT NULL,
  `STATUS` CHAR(1) NOT NULL,
  `TRIES` INT NOT NULL DEFAULT 0,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`MAIL_MESSAGE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`MAIL_MESSAGE` ;

CREATE TABLE IF NOT EXISTS `parco`.`MAIL_MESSAGE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `MESSAGE` VARCHAR(200) NOT NULL,
  `DATE` DATETIME NOT NULL,
  `LEVEL` CHAR(1) NOT NULL,
  `ID_MAIL` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_MAIL_MESSAGE_MAIL1`
    FOREIGN KEY (`ID_MAIL`)
    REFERENCES `parco`.`MAIL` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_MAIL_MESSAGE_MAIL1_idx` ON `parco`.`MAIL_MESSAGE` (`ID_MAIL` ASC);


-- -----------------------------------------------------
-- Table `parco`.`MAIL_PARAMETER`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`MAIL_PARAMETER` ;

CREATE TABLE IF NOT EXISTS `parco`.`MAIL_PARAMETER` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(200) NOT NULL,
  `VALUE` VARCHAR(200) NOT NULL,
  `LABEL` VARCHAR(200) NOT NULL,
  `ID_MAIL` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_MAIL_PARAMETER_MAIL1`
    FOREIGN KEY (`ID_MAIL`)
    REFERENCES `parco`.`MAIL` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_MAIL_PARAMETER_MAIL1_idx` ON `parco`.`MAIL_PARAMETER` (`ID_MAIL` ASC);


-- -----------------------------------------------------
-- Table `parco`.`CONFIGURATIONS`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`CONFIGURATIONS` ;

CREATE TABLE IF NOT EXISTS `parco`.`CONFIGURATIONS` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NAME` VARCHAR(50) NOT NULL,
  `VALUE` VARCHAR(200) NOT NULL,
  `VERSION` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`GENERE_ASSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`GENERE_ASSET` ;

CREATE TABLE IF NOT EXISTS `parco`.`GENERE_ASSET` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `DESCRIZIONE` VARCHAR(100) NOT NULL,
  `TIPO` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`ASSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`ASSET` ;

CREATE TABLE IF NOT EXISTS `parco`.`ASSET` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TIPO` INT NOT NULL,
  `STATO` INT NOT NULL,
  `DATA_STATO` DATETIME NOT NULL,
  `NOTE_STATO` TEXT NULL,
  `ID_UTENTE_STATO` INT NOT NULL,
  `REMOVED` BIT NOT NULL,
  `REMOVAL_DATE` DATETIME NULL,
  `VERSIONE` INT NOT NULL,
  `ID_GENERE_ASSET` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ASSET_USERS1`
    FOREIGN KEY (`ID_UTENTE_STATO`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSET_GENERE_ASSET1`
    FOREIGN KEY (`ID_GENERE_ASSET`)
    REFERENCES `parco`.`GENERE_ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ASSET_USERS1_idx` ON `parco`.`ASSET` (`ID_UTENTE_STATO` ASC);

CREATE INDEX `fk_ASSET_GENERE_ASSET1_idx` ON `parco`.`ASSET` (`ID_GENERE_ASSET` ASC);


-- -----------------------------------------------------
-- Table `parco`.`TIPI_MEZZO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`TIPI_MEZZO` ;

CREATE TABLE IF NOT EXISTS `parco`.`TIPI_MEZZO` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `DESCRIZIONE` VARCHAR(200) NOT NULL,
  `SERBATOIO` DECIMAL(10,2) NULL,
  `CONSUMO_URBANO` DECIMAL(20,2) NULL,
  `CONSUMO_EXTRAURBANO` DECIMAL(10,2) NULL,
  `TIPO_CARBURANTE` INT(11) NULL,
  `VERSIONE` INT(11) NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`MEZZI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`MEZZI` ;

CREATE TABLE IF NOT EXISTS `parco`.`MEZZI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TARGA` VARCHAR(50) NOT NULL,
  `CODICE_RADIO` VARCHAR(50) NULL,
  `NOTE` TEXT NULL,
  `ID_TIPO_MEZZO` INT NULL,
  `DATA_SCADENZA_REVISIONE` DATE NULL,
  `DATA_SCADENZA_BOLLO` DATE NULL,
  `STATO` INT NOT NULL,
  `DATA_STATO` DATETIME NOT NULL,
  `NOTE_STATO` TEXT NULL,
  `ID_UTENTE_STATO` INT NOT NULL,
  `REMOVED` BIT NOT NULL,
  `REMOVAL_DATE` DATETIME NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_MEZZI_TIPI_MEZZO1`
    FOREIGN KEY (`ID_TIPO_MEZZO`)
    REFERENCES `parco`.`TIPI_MEZZO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_MEZZI_USERS1`
    FOREIGN KEY (`ID_UTENTE_STATO`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_MEZZI_TIPI_MEZZO1_idx` ON `parco`.`MEZZI` (`ID_TIPO_MEZZO` ASC);

CREATE INDEX `fk_MEZZI_USERS1_idx` ON `parco`.`MEZZI` (`ID_UTENTE_STATO` ASC);

CREATE INDEX `TARGA` ON `parco`.`MEZZI` (`TARGA` ASC);

CREATE INDEX `CODICERADIO` ON `parco`.`MEZZI` (`CODICE_RADIO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`CARTE_CARBURANTE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`CARTE_CARBURANTE` ;

CREATE TABLE IF NOT EXISTS `parco`.`CARTE_CARBURANTE` (
  `ID` INT(11) NOT NULL AUTO_INCREMENT,
  `NUMERO` VARCHAR(100) NOT NULL,
  `IDENTIFICATIVO` VARCHAR(100) NULL,
  `PIN_CODE` VARCHAR(50) NULL,
  `SCADENZA` DATE NULL,
  `GESTORE` INT NOT NULL,
  `ID_MEZZO` INT NOT NULL,
  `NOTE` TEXT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_CARTE_CARBURANTE_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_asset_padre`
    FOREIGN KEY (`ID`)
    REFERENCES `parco`.`ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_CARTE_CARBURANTE_MEZZI1_idx` ON `parco`.`CARTE_CARBURANTE` (`ID_MEZZO` ASC);

CREATE INDEX `fk_asset_padre_idx` ON `parco`.`CARTE_CARBURANTE` (`ID` ASC);


-- -----------------------------------------------------
-- Table `parco`.`STATI_MEZZO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`STATI_MEZZO` ;

CREATE TABLE IF NOT EXISTS `parco`.`STATI_MEZZO` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STATO` INT NOT NULL,
  `NOTE` TEXT NULL,
  `DATA_INIZIO` DATETIME NOT NULL,
  `DATA_FINE` DATETIME NOT NULL,
  `ID_UTENTE` INT NOT NULL,
  `ID_MEZZO` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_STATI_MEZZO_USERS1`
    FOREIGN KEY (`ID_UTENTE`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_STATI_MEZZO_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_STATI_MEZZO_USERS1_idx` ON `parco`.`STATI_MEZZO` (`ID_UTENTE` ASC);

CREATE INDEX `fk_STATI_MEZZO_MEZZI1_idx` ON `parco`.`STATI_MEZZO` (`ID_MEZZO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`STATI_ASSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`STATI_ASSET` ;

CREATE TABLE IF NOT EXISTS `parco`.`STATI_ASSET` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STATO` INT NOT NULL,
  `NOTE` TEXT NULL,
  `DATA_INIZIO` DATETIME NOT NULL,
  `DATA_FINE` DATETIME NOT NULL,
  `ID_UTENTE` INT NOT NULL,
  `ID_ASSET` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_STATI_ASSET_USERS1`
    FOREIGN KEY (`ID_UTENTE`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_STATI_ASSET_ASSET1`
    FOREIGN KEY (`ID_ASSET`)
    REFERENCES `parco`.`ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_STATI_ASSET_USERS1_idx` ON `parco`.`STATI_ASSET` (`ID_UTENTE` ASC);

CREATE INDEX `fk_STATI_ASSET_ASSET1_idx` ON `parco`.`STATI_ASSET` (`ID_ASSET` ASC);


-- -----------------------------------------------------
-- Table `parco`.`PROVINCE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`PROVINCE` ;

CREATE TABLE IF NOT EXISTS `parco`.`PROVINCE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `SIGLA` VARCHAR(50) NOT NULL,
  `DESCRIZIONE` VARCHAR(200) NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`AREE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`AREE` ;

CREATE TABLE IF NOT EXISTS `parco`.`AREE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_PROVINCIA` INT NOT NULL,
  `NOME` VARCHAR(50) NOT NULL,
  `DESCRIZIONE` VARCHAR(200) NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_AREE_PROVINCE1`
    FOREIGN KEY (`ID_PROVINCIA`)
    REFERENCES `parco`.`PROVINCE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_AREE_PROVINCE1_idx` ON `parco`.`AREE` (`ID_PROVINCIA` ASC);


-- -----------------------------------------------------
-- Table `parco`.`POSTAZIONE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`POSTAZIONE` ;

CREATE TABLE IF NOT EXISTS `parco`.`POSTAZIONE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(50) NOT NULL,
  `CENTRO_COSTO` VARCHAR(200) NULL,
  `DESCRIZIONE` VARCHAR(200) NULL,
  `VERSIONE` INT NOT NULL,
  `ID_AREA` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_POSTAZIONE_AREE1`
    FOREIGN KEY (`ID_AREA`)
    REFERENCES `parco`.`AREE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_POSTAZIONE_AREE1_idx` ON `parco`.`POSTAZIONE` (`ID_AREA` ASC);


-- -----------------------------------------------------
-- Table `parco`.`DOTAZIONE_MEZZO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`DOTAZIONE_MEZZO` ;

CREATE TABLE IF NOT EXISTS `parco`.`DOTAZIONE_MEZZO` (
  `ID` INT NOT NULL,
  `MATRICOLA` VARCHAR(100) NOT NULL,
  `ID_MEZZO` INT NULL,
  `ID_POSTAZIONE` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `id_asset_padre`
    FOREIGN KEY (`ID`)
    REFERENCES `parco`.`ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_TOMTOM_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_DOTAZIONE_MEZZO_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `id_asset_padre_idx` ON `parco`.`DOTAZIONE_MEZZO` (`ID` ASC);

CREATE INDEX `fk_TOMTOM_MEZZI1_idx` ON `parco`.`DOTAZIONE_MEZZO` (`ID_MEZZO` ASC);

CREATE INDEX `fk_DOTAZIONE_MEZZO_POSTAZIONE1_idx` ON `parco`.`DOTAZIONE_MEZZO` (`ID_POSTAZIONE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`PERSONE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`PERSONE` ;

CREATE TABLE IF NOT EXISTS `parco`.`PERSONE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(100) NOT NULL,
  `COGNOME` VARCHAR(100) NOT NULL,
  `MATRICOLA` VARCHAR(100) NULL,
  `QUALIFICA` VARCHAR(100) NULL,
  `REMOVED` BIT NOT NULL,
  `REMOVAL_DATE` DATETIME NULL,
  `VERSIONE` INT NOT NULL,
  `ID_POSTAZIONE` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_PERSONE_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `MATRICOLA` ON `parco`.`PERSONE` (`MATRICOLA` ASC);

CREATE INDEX `NOME` ON `parco`.`PERSONE` (`NOME` ASC);

CREATE INDEX `COGNOME` ON `parco`.`PERSONE` (`COGNOME` ASC);

CREATE INDEX `fk_PERSONE_POSTAZIONE1_idx` ON `parco`.`PERSONE` (`ID_POSTAZIONE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`MOVIMENTO_ASSET`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`MOVIMENTO_ASSET` ;

CREATE TABLE IF NOT EXISTS `parco`.`MOVIMENTO_ASSET` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_ASSET` INT NOT NULL,
  `ID_ASSEGNATARIO` INT NOT NULL,
  `ID_CONSEGNATARIO` INT NULL,
  `TIPO` INT NOT NULL,
  `DATA` DATETIME NOT NULL,
  `NOTE` TEXT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ASSEGNAZIONI_ASSET_ASSET1`
    FOREIGN KEY (`ID_ASSET`)
    REFERENCES `parco`.`ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSEGNAZIONI_ASSET_PERSONE1`
    FOREIGN KEY (`ID_ASSEGNATARIO`)
    REFERENCES `parco`.`PERSONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSEGNAZIONI_ASSET_PERSONE2`
    FOREIGN KEY (`ID_CONSEGNATARIO`)
    REFERENCES `parco`.`PERSONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ASSEGNAZIONI_ASSET_ASSET1_idx` ON `parco`.`MOVIMENTO_ASSET` (`ID_ASSET` ASC);

CREATE INDEX `fk_ASSEGNAZIONI_ASSET_PERSONE1_idx` ON `parco`.`MOVIMENTO_ASSET` (`ID_ASSEGNATARIO` ASC);

CREATE INDEX `fk_ASSEGNAZIONI_ASSET_PERSONE2_idx` ON `parco`.`MOVIMENTO_ASSET` (`ID_CONSEGNATARIO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`DISTRIBUTORI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`DISTRIBUTORI` ;

CREATE TABLE IF NOT EXISTS `parco`.`DISTRIBUTORI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `GESTORE` INT NOT NULL,
  `INDIRIZZO` VARCHAR(200) NOT NULL,
  `CAP` VARCHAR(5) NULL,
  `PROVINCIA` VARCHAR(100) NULL,
  `LOCALITA` VARCHAR(100) NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`PIN_CARD`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`PIN_CARD` ;

CREATE TABLE IF NOT EXISTS `parco`.`PIN_CARD` (
  `ID` INT(11) NOT NULL,
  `CODICE_BUSTA` VARCHAR(100) NULL,
  `CODICE_OPERATORE` VARCHAR(100) NOT NULL,
  `GESTORE` INT NOT NULL,
  `NOTE` TEXT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_PIN_CARTA_CARBURANTE_ASSET1`
    FOREIGN KEY (`ID`)
    REFERENCES `parco`.`ASSET` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_PIN_CARTA_CARBURANTE_ASSET1_idx` ON `parco`.`PIN_CARD` (`ID` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIFORNIMENTI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIFORNIMENTI` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIFORNIMENTI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `ID_CARTA` INT(11) NOT NULL,
  `ID_DISTRIBUTORE` INT NOT NULL,
  `ID_PIN_CARD` INT(11) NULL,
  `GESTORE` INT NOT NULL,
  `NUMERO_SCONTRINO` VARCHAR(100) NOT NULL,
  `DATA` DATETIME NULL,
  `CHILOMETRAGGIO` INT NOT NULL,
  `TIPO_CARBURANTE` INT NULL,
  `QUANTITA` DECIMAL(10,2) NOT NULL,
  `IMPORTO` DECIMAL(10,2) NOT NULL,
  `ID_IMPORT_INFO` INT NOT NULL,
  `PRODOTTO` VARCHAR(100) NOT NULL,
  `AAAAMMGG` VARCHAR(8) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_RIFORNIMENTI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIFORNIMENTI_CARTE_CARBURANTE1`
    FOREIGN KEY (`ID_CARTA`)
    REFERENCES `parco`.`CARTE_CARBURANTE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIFORNIMENTI_DISRIBUTORE1`
    FOREIGN KEY (`ID_DISTRIBUTORE`)
    REFERENCES `parco`.`DISTRIBUTORI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIFORNIMENTI_IMPORT1`
    FOREIGN KEY (`ID_IMPORT_INFO`)
    REFERENCES `parco`.`IMPORT_INFO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIFORNIMENTI_PIN_CARD1`
    FOREIGN KEY (`ID_PIN_CARD`)
    REFERENCES `parco`.`PIN_CARD` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_RIFORNIMENTI_MEZZI1_idx` ON `parco`.`RIFORNIMENTI` (`ID_MEZZO` ASC);

CREATE INDEX `fk_RIFORNIMENTI_CARTE_CARBURANTE1_idx` ON `parco`.`RIFORNIMENTI` (`ID_CARTA` ASC);

CREATE INDEX `fk_RIFORNIMENTI_DISRIBUTORE1_idx` ON `parco`.`RIFORNIMENTI` (`ID_DISTRIBUTORE` ASC);

CREATE INDEX `fk_RIFORNIMENTI_IMPORT1_idx` ON `parco`.`RIFORNIMENTI` (`ID_IMPORT_INFO` ASC);

CREATE INDEX `fk_RIFORNIMENTI_PIN_CARD1_idx` ON `parco`.`RIFORNIMENTI` (`ID_PIN_CARD` ASC);


-- -----------------------------------------------------
-- Table `parco`.`SOCCORSI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`SOCCORSI` ;

CREATE TABLE IF NOT EXISTS `parco`.`SOCCORSI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  `MEDIA_CHILOMETRI` DECIMAL(10,2) NULL,
  `ID_RIF_INIZIO` INT NULL,
  `ID_RIF_FINE` INT NULL,
  `ID_IMPORT_INFO` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_SOCCORSI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SOCCORSI_RIFORNIMENTI1`
    FOREIGN KEY (`ID_RIF_INIZIO`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SOCCORSI_RIFORNIMENTI2`
    FOREIGN KEY (`ID_RIF_FINE`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SOCCORSI_IMPORT_INFO1`
    FOREIGN KEY (`ID_IMPORT_INFO`)
    REFERENCES `parco`.`IMPORT_INFO` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_SOCCORSI_MEZZI1_idx` ON `parco`.`SOCCORSI` (`ID_MEZZO` ASC);

CREATE INDEX `fk_SOCCORSI_RIFORNIMENTI1_idx` ON `parco`.`SOCCORSI` (`ID_RIF_INIZIO` ASC);

CREATE INDEX `fk_SOCCORSI_RIFORNIMENTI2_idx` ON `parco`.`SOCCORSI` (`ID_RIF_FINE` ASC);

CREATE INDEX `fk_SOCCORSI_IMPORT_INFO1_idx` ON `parco`.`SOCCORSI` (`ID_IMPORT_INFO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`ASSEGNAZIONI_MEZZO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`ASSEGNAZIONI_MEZZO` ;

CREATE TABLE IF NOT EXISTS `parco`.`ASSEGNAZIONI_MEZZO` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `ID_POSTAZIONE` INT NOT NULL,
  `DATA_INIZIO` DATETIME NOT NULL,
  `DATA_FINE` DATETIME NULL,
  `STATO_SERBATOIO` INT NULL,
  `CHILOMETRAGGIO` INT NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ASSEGNAZIONI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSEGNAZIONI_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ASSEGNAZIONI_MEZZI1_idx` ON `parco`.`ASSEGNAZIONI_MEZZO` (`ID_MEZZO` ASC);

CREATE INDEX `fk_ASSEGNAZIONI_POSTAZIONE1_idx` ON `parco`.`ASSEGNAZIONI_MEZZO` (`ID_POSTAZIONE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`COMPAGNIE_ASSICURAZIONE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`COMPAGNIE_ASSICURAZIONE` ;

CREATE TABLE IF NOT EXISTS `parco`.`COMPAGNIE_ASSICURAZIONE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NOME` VARCHAR(100) NOT NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`POLIZZE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`POLIZZE` ;

CREATE TABLE IF NOT EXISTS `parco`.`POLIZZE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `ID_COMPAGNIA` INT NOT NULL,
  `NUMERO` VARCHAR(200) NOT NULL,
  `DATA_DECORRENZA` DATETIME NOT NULL,
  `DATA_SCADENZA` DATETIME NOT NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ASSICURAZIONI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ASSICURAZIONI_COMPAGNIE_ASSICURAZIONE1`
    FOREIGN KEY (`ID_COMPAGNIA`)
    REFERENCES `parco`.`COMPAGNIE_ASSICURAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ASSICURAZIONI_MEZZI1_idx` ON `parco`.`POLIZZE` (`ID_MEZZO` ASC);

CREATE INDEX `fk_ASSICURAZIONI_COMPAGNIE_ASSICURAZIONE1_idx` ON `parco`.`POLIZZE` (`ID_COMPAGNIA` ASC);


-- -----------------------------------------------------
-- Table `parco`.`CODIFICA_CARBURANTI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`CODIFICA_CARBURANTI` ;

CREATE TABLE IF NOT EXISTS `parco`.`CODIFICA_CARBURANTI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TIPO` INT NULL,
  `VALORE` VARCHAR(100) NOT NULL,
  `CONSENTITO` TINYINT(1) NOT NULL DEFAULT 1,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`RIFORNIMENTO_AGIP`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIFORNIMENTO_AGIP` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIFORNIMENTO_AGIP` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `DATA_FATTURA` DATE NULL,
  `EXTRA` TEXT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_padre`
    FOREIGN KEY (`ID`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_padre_idx` ON `parco`.`RIFORNIMENTO_AGIP` (`ID` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIFORNIMENTO_Q8`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIFORNIMENTO_Q8` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIFORNIMENTO_Q8` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `IMPORTO_NON_SCONTATO` DECIMAL(10,2) NULL,
  `IMPORTO_SCONTATO` DECIMAL(10,2) NULL,
  `PREZZO_NON_SCONTATO` DECIMAL(10,2) NULL,
  `PREZZO_SCONTATO` DECIMAL(10,2) NULL,
  `UTILIZZATORE` VARCHAR(100) NULL,
  `CODICE_TERMINALE` VARCHAR(100) NULL,
  `CARTISSIMA` VARCHAR(100) NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_padre0`
    FOREIGN KEY (`ID`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_padre_idx` ON `parco`.`RIFORNIMENTO_Q8` (`ID` ASC);


-- -----------------------------------------------------
-- Table `parco`.`SCONTRINI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`SCONTRINI` ;

CREATE TABLE IF NOT EXISTS `parco`.`SCONTRINI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `NUMERO` VARCHAR(100) NULL,
  `ID_RIFORNIMENTO` INT NOT NULL,
  `ID_MEZZO_RETTIFICATO` INT NULL,
  `CHILOMETRAGGIO_RETTIFICATO` INT NULL,
  `STATO` INT NOT NULL,
  `DATA_STATO` DATETIME NOT NULL,
  `NOTE_STATO` TEXT NULL,
  `ID_UTENTE_STATO` INT NOT NULL,
  `NOTE` TEXT NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_SCONTRINI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO_RETTIFICATO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SCONTRINI_USERS1`
    FOREIGN KEY (`ID_UTENTE_STATO`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_SCONTRINI_RIFORNIMENTI1`
    FOREIGN KEY (`ID_RIFORNIMENTO`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_SCONTRINI_MEZZI1_idx` ON `parco`.`SCONTRINI` (`ID_MEZZO_RETTIFICATO` ASC);

CREATE INDEX `fk_SCONTRINI_USERS1_idx` ON `parco`.`SCONTRINI` (`ID_UTENTE_STATO` ASC);

CREATE INDEX `fk_SCONTRINI_RIFORNIMENTI1_idx` ON `parco`.`SCONTRINI` (`ID_RIFORNIMENTO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`STATI_SCONTRINO`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`STATI_SCONTRINO` ;

CREATE TABLE IF NOT EXISTS `parco`.`STATI_SCONTRINO` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `STATO` INT NOT NULL,
  `DATA_INIZIO` DATETIME NOT NULL,
  `DATA_FINE` DATETIME NOT NULL,
  `NOTE` TEXT NULL,
  `ID_UTENTE` INT NOT NULL,
  `ID_SCONTRINO` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_STATI_SCONTRINO_USERS1`
    FOREIGN KEY (`ID_UTENTE`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_STATI_SCONTRINO_SCONTRINI1`
    FOREIGN KEY (`ID_SCONTRINO`)
    REFERENCES `parco`.`SCONTRINI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_STATI_SCONTRINO_USERS1_idx` ON `parco`.`STATI_SCONTRINO` (`ID_UTENTE` ASC);

CREATE INDEX `fk_STATI_SCONTRINO_SCONTRINI1_idx` ON `parco`.`STATI_SCONTRINO` (`ID_SCONTRINO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`ANOMALIE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`ANOMALIE` ;

CREATE TABLE IF NOT EXISTS `parco`.`ANOMALIE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `TIPO` INT NOT NULL,
  `STATO` INT NOT NULL,
  `DESCRIZIONE` VARCHAR(1000) NULL,
  `NOTA` TEXT NULL,
  `ID_RIFORNIMENTO` INT NOT NULL,
  `ID_RIFORNIMENTO_PRECEDENTE` INT NULL,
  `VERSIONE` INT NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ANOMALIE_RIFORNIMENTI1`
    FOREIGN KEY (`ID_RIFORNIMENTO`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ANOMALIE_RIFORNIMENTI2`
    FOREIGN KEY (`ID_RIFORNIMENTO_PRECEDENTE`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ANOMALIE_RIFORNIMENTI1_idx` ON `parco`.`ANOMALIE` (`ID_RIFORNIMENTO` ASC);

CREATE INDEX `fk_ANOMALIE_RIFORNIMENTI2_idx` ON `parco`.`ANOMALIE` (`ID_RIFORNIMENTO_PRECEDENTE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`ENTITA_ASSEGNATE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`ENTITA_ASSEGNATE` ;

CREATE TABLE IF NOT EXISTS `parco`.`ENTITA_ASSEGNATE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_GRUPPO` INT NULL,
  `ID_UTENTE` INT NULL,
  `ID_PROVINCIA` INT NULL,
  `ID_AREA` INT NULL,
  `ID_POSTAZIONE` INT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_ENTITA_ASSEGNATE_PROVINCE1`
    FOREIGN KEY (`ID_PROVINCIA`)
    REFERENCES `parco`.`PROVINCE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTITA_ASSEGNATE_AREE1`
    FOREIGN KEY (`ID_AREA`)
    REFERENCES `parco`.`AREE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTITA_ASSEGNATE_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTITA_ASSEGNATE_GROUPS1`
    FOREIGN KEY (`ID_GRUPPO`)
    REFERENCES `parco`.`GROUPS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_ENTITA_ASSEGNATE_USERS1`
    FOREIGN KEY (`ID_UTENTE`)
    REFERENCES `parco`.`USERS` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_ENTITA_ASSEGNATE_PROVINCE1_idx` ON `parco`.`ENTITA_ASSEGNATE` (`ID_PROVINCIA` ASC);

CREATE INDEX `fk_ENTITA_ASSEGNATE_AREE1_idx` ON `parco`.`ENTITA_ASSEGNATE` (`ID_AREA` ASC);

CREATE INDEX `fk_ENTITA_ASSEGNATE_POSTAZIONE1_idx` ON `parco`.`ENTITA_ASSEGNATE` (`ID_POSTAZIONE` ASC);

CREATE INDEX `fk_ENTITA_ASSEGNATE_GROUPS1_idx` ON `parco`.`ENTITA_ASSEGNATE` (`ID_GRUPPO` ASC);

CREATE INDEX `fk_ENTITA_ASSEGNATE_USERS1_idx` ON `parco`.`ENTITA_ASSEGNATE` (`ID_UTENTE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIEPILOGO_RIF_MEZZI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIEPILOGO_RIF_MEZZI` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIEPILOGO_RIF_MEZZI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  `CHILOMETRI` INT NULL,
  `QUANTITA` DECIMAL(10,2) NOT NULL,
  `IMPORTO` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_RIEPILOGO_RIFORNIMENTI_MEZZO_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_RIEPILOGO_RIFORNIMENTI_MEZZO_MEZZI1_idx` ON `parco`.`RIEPILOGO_RIF_MEZZI` (`ID_MEZZO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIEPILOGO_RIF_MEZZO_POSTAZIONI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIEPILOGO_RIF_MEZZO_POSTAZIONI` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIEPILOGO_RIF_MEZZO_POSTAZIONI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `ID_POSTAZIONE` INT NOT NULL,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  `CHILOMETRI` INT NULL,
  `QUANTITA` DECIMAL(10,2) NOT NULL,
  `IMPORTO` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_RIEPILOGO_RIF_MEZZO_POSTAZIONE_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_RIEPILOGO_RIF_MEZZO_POSTAZIONE_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_RIEPILOGO_RIF_MEZZO_POSTAZIONE_MEZZI1_idx` ON `parco`.`RIEPILOGO_RIF_MEZZO_POSTAZIONI` (`ID_MEZZO` ASC);

CREATE INDEX `fk_RIEPILOGO_RIF_MEZZO_POSTAZIONE_POSTAZIONE1_idx` ON `parco`.`RIEPILOGO_RIF_MEZZO_POSTAZIONI` (`ID_POSTAZIONE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIEPILOGO_RIF_POSTAZIONI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIEPILOGO_RIF_POSTAZIONI` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIEPILOGO_RIF_POSTAZIONI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_POSTAZIONE` INT NOT NULL,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  `CHILOMETRI` INT NULL,
  `QUANTITA` DECIMAL(10,2) NOT NULL,
  `IMPORTO` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_RIEPILOGO_RIF_POSTAZIONI_POSTAZIONE1`
    FOREIGN KEY (`ID_POSTAZIONE`)
    REFERENCES `parco`.`POSTAZIONE` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_RIEPILOGO_RIF_POSTAZIONI_POSTAZIONE1_idx` ON `parco`.`RIEPILOGO_RIF_POSTAZIONI` (`ID_POSTAZIONE` ASC);


-- -----------------------------------------------------
-- Table `parco`.`CONSUMI`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`CONSUMI` ;

CREATE TABLE IF NOT EXISTS `parco`.`CONSUMI` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `ID_MEZZO` INT NOT NULL,
  `DATA` DATETIME NULL,
  `ID_RIF` INT NOT NULL,
  `ID_RIF_PRED` INT NOT NULL,
  `QUANTITA` DECIMAL(10,2) NOT NULL,
  `CHILOMETRI` INT NOT NULL,
  `CONSUMO` DECIMAL(10,2) NOT NULL,
  PRIMARY KEY (`ID`),
  CONSTRAINT `fk_CONSUMI_RIFORNIMENTI1`
    FOREIGN KEY (`ID_RIF`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONSUMI_RIFORNIMENTI2`
    FOREIGN KEY (`ID_RIF_PRED`)
    REFERENCES `parco`.`RIFORNIMENTI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_CONSUMI_MEZZI1`
    FOREIGN KEY (`ID_MEZZO`)
    REFERENCES `parco`.`MEZZI` (`ID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

CREATE INDEX `fk_CONSUMI_RIFORNIMENTI1_idx` ON `parco`.`CONSUMI` (`ID_RIF` ASC);

CREATE INDEX `fk_CONSUMI_RIFORNIMENTI2_idx` ON `parco`.`CONSUMI` (`ID_RIF_PRED` ASC);

CREATE INDEX `fk_CONSUMI_MEZZI1_idx` ON `parco`.`CONSUMI` (`ID_MEZZO` ASC);


-- -----------------------------------------------------
-- Table `parco`.`RIEPILOGO_RIF`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIEPILOGO_RIF` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIEPILOGO_RIF` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  `QUANTITA` INT NOT NULL,
  `IMPORTO` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `parco`.`RIEPILOGO_ANOMALIE`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `parco`.`RIEPILOGO_ANOMALIE` ;

CREATE TABLE IF NOT EXISTS `parco`.`RIEPILOGO_ANOMALIE` (
  `ID` INT NOT NULL AUTO_INCREMENT,
  `MESE` INT NOT NULL,
  `ANNO` INT NOT NULL,
  `TIPO` INT NOT NULL,
  `NUMERO` INT NOT NULL,
  PRIMARY KEY (`ID`))
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

INSERT INTO PERMISSIONS VALUES (1, '*', 0);
INSERT INTO PERMISSIONS VALUES (2, 'VIEW.ALL', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT.SCADENZE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT.MEZZI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT.POSTAZIONI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.REPORT.CONSUMI', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.TIPOMEZZO', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.ASSICURAZIONE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.POLIZZA', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.MEZZO', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.MEZZI.SOCCORSI', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.PIN', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.CARTE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.RIFORNIMENTI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.SCONTRINI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.CARBURANTI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.RIFORNIMENTI.ANOMALIE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA.PROVINCE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA.AREE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA.POSTAZIONI', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.ANAGRAFICA.PERSONE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP.USER', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP.GROUP', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP.PERMISSION', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.USERGROUP.EVENT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.CONFIG', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.MANAGE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.JOB', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.MAIL', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.INFO', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.IMPORT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MENU.SYSTEM.GENERI', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.JOB.NEW', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('DASHBOARD.VIEW', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.ID.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.DESCRIZIONE.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.DESCRIZIONE.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.SERBATOIO.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.SERBATOIO.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.CONSUMO_URBANO.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.CONSUMO_URBANO.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.CONSUMO_EXTRAURBANO.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.CONSUMO_EXTRAURBANO.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.TIPO_CARBURANTE.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.TIPOMEZZO.TIPO_CARBURANTE.EDIT', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.TIPOMEZZO.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.TIPOMEZZO.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSICURAZIONE.*', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSICURAZIONE.ID.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSICURAZIONE.NOME.VIEW', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSICURAZIONE.NOME.EDIT', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.ASSICURAZIONE.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.ASSICURAZIONE.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.NUMERO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.NUMERO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.MEZZO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.ASSICURAZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.ASSICURAZIONE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.DECORRENZA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.DECORRENZA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.SCADENZA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POLIZZA.SCADENZA.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.POLIZZA.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.POLIZZA.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.TARGA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.TARGA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.CODICE_RADIO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.CODICE_RADIO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.NOTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.NOTE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.TIPO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.SCADENZA_REVISIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.SCADENZA_REVISIONE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.SCADENZA_BOLLO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.SCADENZA_BOLLO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.STATO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.DATA_STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.DATA_STATO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.NOTE_STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.NOTE_STATO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.UTENTE_STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.UTENTE_STATO.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.RIFORNIMENTI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.POLIZZE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.CARTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.STATI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.SOCCORSI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.ASSEGNAZIONI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.MEZZO.DOTAZIONI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.MEZZO.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.MEZZO.DELETE', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.MEZZO.ASSEGNA', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.MEZZO.CHANGESTATUS', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.MEZZO.DOTAZIONE.EDIT', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.TIPO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.GENERE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.GENERE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.MATRICOLA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.MATRICOLA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.STATI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.DOTAZIONE.STATI.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.FILE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.DATA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.UTENTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.DATAINIZIO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.IMPORT.DATAFINE.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.IMPORT.UPLOAD', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.IMPORT.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.SIGLA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.SIGLA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.DESCRIZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PROVINCIA.DESCRIZIONE.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PROVINCIA.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PROVINCIA.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.PROVINCIA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.PROVINCIA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.NOME.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.NOME.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.DESCRIZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.AREA.DESCRIZIONE.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.AREA.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.AREA.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.NOME.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.NOME.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.DESCRIZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.DESCRIZIONE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.CENTROCOSTO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.CENTROCOSTO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.AREA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.AREA.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.POSTAZIONE.DOTAZIONI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.POSTAZIONE.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.POSTAZIONE.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.POSTAZIONE.DOTAZIONE.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.CARTA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.NUMERO_SCONTRINO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.GESTORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.DATA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.DISTRIBUTORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.CHILOMETRAGGIO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.TIPO_CARBURANTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.QUANTITA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.IMPORTO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.SCONTRINO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.EXTRA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.POSTAZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.RIFORNIMENTO.PINCARD.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.NUMERO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.NUMERO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.CARTA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.GESTORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.KMRET.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.KMRET.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.MEZZORET.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.MEZZORET.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.NOTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.NOTE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.STATI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SCONTRINO.PINCARD.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.SCONTRINO.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.PERIODO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.NUMERO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.MEDIA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.SOCCORSO.RIFORNIMENTI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.NUMERO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.NUMERO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.IDENTIFICATIVO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.IDENTIFICATIVO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.PIN.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.PIN.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.SCADENZA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.SCADENZA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.GESTORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.GESTORE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.MEZZO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.NOTE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.NOTE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.DATAATT.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.RIFORNIMENTI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CARTA.STATI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.CARTA.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.CARTA.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.NOME.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.NOME.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.COGNOME.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.COGNOME.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.QUALIFICA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.QUALIFICA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.MATRICOLA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.MATRICOLA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.POSTAZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PERSONA.POSTAZIONE.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PERSONA.EDIT', 0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PERSONA.DELETE', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.CODICE.OPERATORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.CODICE.OPERATORE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.CODICE.BUSTA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.CODICE.BUSTA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.GESTORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.GESTORE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.NOTE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.PINCARD.NOTE.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PINCARD.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.PINCARD.DELETE',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.TIPO.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.VALORE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.VALORE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.CONSENTITO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CODCARB.CONSENTITO.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.CODCARB.EDIT', 0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.POSTAZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.DATAINIZIO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.DATAFINE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.SERBATOIO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ASSMEZZO.CHILOMETRI.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.DESCRIZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.NOTA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.NOTA.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.STATO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.RIFORNIMENTO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.ANOMALIA.GESTORE.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.MEZZO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.DATA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.RIF.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.QUANTITA.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.CHILOMETRI.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.CONSUMI.CONSUMO.VIEW',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.*',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.ID.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.DESCRIZIONE.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.DESCRIZIONE.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.TIPO.VIEW',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('MODEL.GENEREASSET.TIPO.EDIT',0);

INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.GENEREASSET.EDIT',0);
INSERT INTO PERMISSIONS(NAME,VERSION) VALUES ('ACTION.GENEREASSET.DELETE',0);

INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (1, 'TOMTOM', 3);
INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (2, 'VIACARD', 3);
INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (3, 'TELEPASS', 3);

INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (4, 'TOMTOM', 2);
INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (5, 'VIACARD', 2);
INSERT INTO GENERE_ASSET(ID,DESCRIZIONE,TIPO) VALUES (6, 'TELEPASS', 2);


INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('date.format.short','dd/MM/yyyy',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('date.format.long','dd/MM/yyyy HH:mm',0);

INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('job.enabled','TRUE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('job.delay.min','3',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('job.tries','20',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('job.keep.day','30',0);

INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.enabled','FALSE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.serverHost','smtp.gmail.com',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.serverPort','465',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.username','xxxx@gmail.com',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.password','yyyyy',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.enableSsl','TRUE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.auth','TRUE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.domainName','',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.enableTls','FALSE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.requireTls','FALSE',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.delay.min','3',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.tries','10',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.keep.day','30',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('mail.sender','XXXX <xxxx@gmail.com>',0);

INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('import.path','.',0);
INSERT INTO CONFIGURATIONS (NAME,VALUE,VERSION) VALUES('responsabile.uo','John Doe',0);

INSERT INTO USERS (ID, USERNAME, PASSWORD, NAME, SURNAME, ACTIVE, REMOVED, VERSION)
VALUES ( 1,
	'admin', 
	'e5e9fa1ba31ecd1ae84f75caaa474f3a663f05f4', 
	'admin', 
	'admin',
	1,
	0,
	0
	);

INSERT INTO USERS (ID, USERNAME, PASSWORD, NAME, SURNAME, ACTIVE, REMOVED, VERSION)
VALUES ( 2,
	'system', 
	'system', 
	'system', 
	'system',
	0,
	0,
	0
	);
	
INSERT INTO GROUPS (ID, NAME, DESCRIPTION, VERSION)
VALUES (1, 'ADMINISTRATORS', 'Amministratori di sistema', 0);

INSERT INTO USERS_GROUPS ( ID, ID_USERS, ID_GROUPS )
VALUES (1, 1, 1);

INSERT INTO GROUP_PERMISSION ( ID, ID_GROUPS, ID_PERMISSIONS )
VALUES (1, 1, 1);